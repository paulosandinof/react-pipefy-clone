{"version":3,"sources":["styles/global.js","components/Header/styles.js","components/Header/index.jsx","components/Board/context.js","components/Card/styles.js","components/Card/index.jsx","components/List/styles.js","components/List/index.jsx","components/Board/styles.js","components/Board/index.jsx","services/api.js","App.jsx","index.jsx"],"names":["createGlobalStyle","Container","styled","div","Header","createContext","lists","move","props","isDragging","css","Label","span","color","Card","data","index","listIndex","ref","useRef","useContext","BoardContext","useDrag","item","type","collect","monitor","dragRef","useDrop","accept","hover","draggedListIndex","targetListIndex","draggedIndex","targetIndex","targetSize","current","getBoundingClientRect","targetCenter","bottom","top","draggedTop","getClientOffset","y","dropRef","labels","map","label","key","content","user","src","alt","done","List","className","title","creatable","size","cards","card","id","Board","useState","setLists","Provider","value","fromList","toList","from","to","dragged","splice","list","App","DndProvider","backend","HTML5Backend","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0279fef.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    height: 100%;\n  }\n\n  body {\n    font: 14px 'Roboto', sans-serif;\n    background: #ecf1f8;\n    color: #333;\n    -webkit-font-smoothing: antialiased !important\n  }\n\n  ul {\n    list-style: none;\n  }\n`;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 80px;\n  padding: 0 30px;\n  background: #7159c1;\n  color: #FFF;\n\n  display: flex;\n  align-items: center;\n\n`;\n\nexport default Container;\n","import React from 'react';\n\nimport Container from './styles';\n\nexport default function Header() {\n  return (\n    <Container>\n      <h1>Pipefy</h1>\n    </Container>\n  );\n}\n","import { createContext } from 'react';\n\nexport default createContext({\n  lists: [],\n  move: () => {},\n});\n","import styled, { css } from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  background: #FFF;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  padding: 15px;\n  box-shadow: 0 1px 4px 0 rgba(192, 208, 230, 0.8);\n  border-top: 20px solid rgba(230, 236, 245, 0.4);\n  cursor: grab;\n\n  header {\n    height: 20px;\n    position: absolute;\n    top: -18px;\n    left: 15px; // Unused\n  }\n\n  p {\n    font-weight: 600;\n    line-height: 20px;\n  }\n\n  img {\n    width: 24px;\n    height: 24px;\n    border-radius: 2px;\n    margin-top: 5px;\n  }\n\n  ${(props) => props.isDragging && css`\n    border: 2px dashed rgba(0, 0, 0, 0.2);\n    padding-top: 31px;\n    border-radius: 0;\n    background: transparent;\n    box-shadow: none;\n    cursor: grabbing;\n\n    p, img, header {\n      opacity: 0;\n    }\n  `}\n`;\n\nexport const Label = styled.span`\n  width: 10px;\n  height: 10px;\n  border-radius: 2px;\n  display: inline-block;\n  background: ${(props) => props.color};\n\n  & + span {\n    margin-left: 2px;\n  }\n`;\n","import React, { useRef, useContext } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport PropTypes from 'prop-types';\n\nimport BoardContext from '../Board/context';\n\nimport { Container, Label } from './styles';\n\nexport default function Card({ data, index, listIndex }) {\n  const ref = useRef();\n  const { move } = useContext(BoardContext);\n\n  const [{ isDragging }, dragRef] = useDrag({\n    item: {\n      type: 'CARD',\n      index,\n      listIndex,\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const [, dropRef] = useDrop({\n    accept: 'CARD',\n    hover(item, monitor) {\n      const draggedListIndex = item.listIndex;\n      const targetListIndex = listIndex;\n\n      const draggedIndex = item.index;\n      const targetIndex = index;\n\n      if (\n        draggedIndex === targetIndex &&\n        draggedListIndex === targetListIndex\n      ) {\n        return;\n      }\n\n      const targetSize = ref.current.getBoundingClientRect();\n      const targetCenter = (targetSize.bottom - targetSize.top) / 2;\n\n      const draggedOffset = monitor.getClientOffset();\n      const draggedTop = draggedOffset.y - targetSize.top;\n\n      if (draggedIndex < targetIndex && draggedTop < targetCenter) {\n        return;\n      }\n\n      if (draggedIndex > targetIndex && draggedTop > targetCenter) {\n        return;\n      }\n\n      move(draggedListIndex, targetListIndex, draggedIndex, targetIndex);\n\n      item.index = targetIndex;\n      item.listIndex = targetListIndex;\n    },\n  });\n\n  dragRef(dropRef(ref));\n\n  return (\n    <Container ref={ref} isDragging={isDragging}>\n      <header>\n        {data.labels.map(label => (\n          <Label key={label} color={label} />\n        ))}\n      </header>\n      <p>{data.content}</p>\n      {data.user && <img src={data.user} alt=\"\" />}\n    </Container>\n  );\n}\n\nCard.propTypes = {\n  data: PropTypes.shape({\n    user: PropTypes.string,\n    content: PropTypes.string,\n    labels: PropTypes.array,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n  listIndex: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  padding: 0 15px;\n  height: 100%;\n  overflow: auto; // .\n\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: 320px;\n\n  opacity: ${(props) => (props.done ? 0.6 : 1)};\n\n  & + div {\n    border-left: 1px solid rgba(0, 0, 0, 0.05);\n  }\n\n  .task-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 42px;\n\n    h2 {\n      font-weight: 600;\n      font-size: 16px;\n      padding: 0 10px;\n\n    }\n\n    button {\n      width: 42px;\n      height: 42px;\n      border-radius: 20px;\n      background: #3b5bfd;\n      border: 0;\n      cursor: pointer;\n    }\n  }\n\n  ul {\n    margin-top: 30px;\n  }\n\n`;\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { MdAdd } from 'react-icons/md';\n\nimport Card from '../Card';\n\nimport Container from './styles';\n\nexport default function List({ data, index: listIndex }) {\n  return (\n    <Container done={data.done}>\n      <header className=\"task-header\">\n        <h2>{data.title}</h2>\n        {data.creatable && (\n          <button type=\"button\">\n            <MdAdd size={24} color=\"#FFF\" />\n          </button>\n        )}\n      </header>\n\n      <ul>\n        {data.cards.map((card, index) => (\n          <Card key={card.id} listIndex={listIndex} index={index} data={card} />\n        ))}\n      </ul>\n    </Container>\n  );\n}\n\nList.propTypes = {\n  data: PropTypes.shape({\n    done: PropTypes.bool,\n    title: PropTypes.string,\n    creatable: PropTypes.bool,\n    cards: PropTypes.array,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n};\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  padding: 30px 0;\n  height: calc(100% - 80px);\n  width: 100%; // .\n  overflow: auto; // .\n`;\n\nexport default Container;\n","import React, { useState } from 'react';\n\nimport BoardContext from './context';\n\nimport List from '../List';\n\nimport loadLists from '../../services/api';\n\nimport Container from './styles';\n\nconst data = loadLists();\n\nexport default function Board() {\n  const [lists, setLists] = useState(data);\n\n  function move(fromList, toList, from, to) {\n    const dragged = lists[fromList].cards[from];\n\n    lists[fromList].cards.splice(from, 1);\n    lists[toList].cards.splice(to, 0, dragged);\n\n    setLists([...lists]);\n  }\n\n  return (\n    <BoardContext.Provider value={{ lists, move }}>\n      <Container>\n        {lists.map((list, index) => (\n          <List key={list.title} index={index} data={list} />\n        ))}\n      </Container>\n    </BoardContext.Provider>\n  );\n}\n","export default function loadLists() {\n  return [\n    {\n      title: 'Tarefas',\n      creatable: true,\n      cards: [\n        {\n          id: 1,\n          content: 'Estudar NodeJS',\n          labels: ['#7159c1', '#54e1f7'],\n          user: 'https://api.adorable.io/avatars/285/abott@adorable.png',\n        },\n        {\n          id: 2,\n          content: 'Estudar Java',\n          labels: ['#7159c1'],\n          user: 'https://api.adorable.io/avatars/285/abott@adorable.png',\n        },\n        {\n          id: 3,\n          content: 'Estudar Spring',\n          labels: ['#7159c1'],\n          user: 'https://api.adorable.io/avatars/285/abott@adorable.png',\n        },\n        {\n          id: 4,\n          content: 'Fazer Atividade de Engenharia de Linguagens',\n          labels: ['#54e1f7'],\n          user: 'https://api.adorable.io/avatars/285/abott@adorable.png',\n        },\n        {\n          id: 5,\n          content:\n            'Aprender sobre autenticação, JWT e Refresh Token com NodeJS',\n          labels: ['#54e1f7'],\n          user: 'https://api.adorable.io/avatars/285/abott@adorable.png',\n        },\n      ],\n    },\n    {\n      title: 'Fazendo',\n      creatable: false,\n      cards: [\n        {\n          id: 6,\n          content: 'Recriando clone do Pipefy',\n          labels: [],\n          user: 'https://api.adorable.io/avatars/285/abott@adorable.png',\n        },\n      ],\n    },\n    {\n      title: 'Pausado',\n      creatable: false,\n      cards: [\n        {\n          id: 7,\n          content:\n            'Criar Model de Avisos no projeto de Projeto Detalhado de Software',\n          labels: ['#7159c1'],\n          user: 'https://api.adorable.io/avatars/285/abott@adorable.png',\n        },\n        {\n          id: 8,\n          content: 'Assistir vídeo aula sobre GraphQL com NodeJS',\n          labels: ['#54e1f7'],\n          user: 'https://api.adorable.io/avatars/285/abott@adorable.png',\n        },\n        {\n          id: 9,\n          content: 'Ajustar aplicação Gitcompare',\n          labels: [],\n        },\n      ],\n    },\n    {\n      title: 'Concluído',\n      creatable: false,\n      done: true,\n      cards: [\n        {\n          id: 10,\n          content: 'Fazer atividade de Teste de Software',\n          labels: [],\n        },\n        {\n          id: 12,\n          content: 'Fazer deploy da aplicação de Web I',\n          labels: ['#54e1f7'],\n        },\n        {\n          id: 13,\n          content: 'Ajustar CRUDs no projeto de Projeto Detalhado de Software',\n          labels: ['#7159c1'],\n        },\n      ],\n    },\n  ];\n}\n","import React from 'react';\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\nimport GlobalStyle from './styles/global';\n\nimport Header from './components/Header';\nimport Board from './components/Board';\n\nfunction App() {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Header />\n      <Board />\n\n      <GlobalStyle />\n    </DndProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}